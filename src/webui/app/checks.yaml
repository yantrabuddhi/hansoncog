# Set up an environment for the checks
#
# For example:
# ROSNODELIST environment variable will cache output of `rosnode list`.
# The call takes ~0.5s and this allows it to be called only once instead of
# with every check.
setup:
  env:
    ROSNODELIST: rosnode list
  prepend:
    - . ./rosfuncs.sh
    - . ../../../devel/setup.sh
# Property 'cmd' will be run as a sh command that should return statuscode 0
# for success and 1 or other for failure.
#
# For example:
# "test -e /path/to/file " checks if a file exists
# "node_running head_ctrl" checks if a node is running under any namespace
# (see ros_node_funcs.sh for node_running definition)
checks:
  - label: Sanity Check
    cmd: test 1 = 1

  - label: Pololu Board 0
    cmd: test -e /dev/ttyACM0

  - label: Pololu Board 1
    cmd: test -e /dev/ttyACM1

  - label: ros_pololu_servo
    cmd: node_running ros_pololu_servo

  - label: pau2motors
    cmd: node_running pau2motors

  - label: rosbridge
    cmd: node_running rosbridge_websocket

  - label: behavior_tree
    cmd: node_running Behavior_Tree

  - label: pi_vision
    cmd: node_running pi_face_tracker

  - label: blender_api
    cmd: node_running blender_api

  - label: pololu status
    cmd: check_param_value /robot/head_enabled true
